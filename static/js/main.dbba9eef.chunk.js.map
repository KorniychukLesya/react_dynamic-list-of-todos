{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","todoId","setTodoId","className","map","todo","id","completed","title","type","onClick","TodoFilter","filter","setCurentFilter","query","setQuery","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","selectedUserId","selectUser","curentTodo","find","useState","user","setUsers","cardOpen","setCardClose","useEffect","userId","response","href","email","name","App","setTodos","loader","setLoader","setFilter","filterTodos","serchTodos","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dbba9eef.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  todoId: number;\n  setTodoId: (event: number) => number | void;\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, todoId, setTodoId }) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className={todoId === todo.id\n              ? 'has-background-info-light'\n              : ''}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={!todo.completed\n                ? 'has-text-danger'\n                : 'has-text-success'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => ((todoId === todo.id)\n                  ? setTodoId(0)\n                  : setTodoId(todo.id))}\n              >\n                <span className=\"icon\">\n                  <i className={todoId !== todo.id\n                    ? 'far fa-eye'\n                    : 'far fa-eye-slash'}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n        ))}\n\n      </tbody>\n    </table>\n  );\n};\n","import { ChangeEvent } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  filter: string,\n  setCurentFilter: (value: string) => void,\n  query:string;\n  setQuery: (value: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filter, setCurentFilter, query, setQuery,\n}) => {\n  const handlSelect = (event: ChangeEvent<HTMLSelectElement>) => {\n    setCurentFilter(event.target.value);\n  };\n\n  const handlQuery = (event: { target: { value: string; }; }) => {\n    setQuery(event.target.value);\n  };\n\n  const deleteQuery = () => {\n    setQuery('');\n  };\n\n  return (\n\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={handlSelect}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handlQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {(query !== '') && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={deleteQuery}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todos: Todo[];\n  selectedUserId: number,\n  selectUser: (value: number) => number | void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedUserId,\n  selectUser,\n  todos,\n}) => {\n  const curentTodo = todos.find(todo => todo.id === selectedUserId);\n  const [user, setUsers] = useState<User | null>(null);\n  const [cardOpen, setCardClose] = useState(true);\n\n  useEffect(() => {\n    if (curentTodo) {\n      getUser(curentTodo.userId)\n        .then(response => {\n          setUsers(response);\n        });\n    }\n  }, []);\n\n  if (cardOpen === false) {\n    return null;\n  }\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${curentTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                selectUser(0);\n                setCardClose(false);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {curentTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className=\"has-text-danger\">Planned</strong>\n\n              {' by '}\n              {user && (\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n\n              )}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Todo } from './types/Todo';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loader, setLoader] = useState(false);\n  const [filter, setFilter] = useState('all');\n  const [query, setQuery] = useState('');\n  const [todoId, setTodoId] = useState(0);\n\n  useEffect(() => {\n    getTodos()\n      .then(todo => {\n        setTodos(todo);\n        setLoader(true);\n      });\n  }, []);\n\n  const filterTodos = todos.filter(todo => {\n    switch (filter) {\n      case 'completed':\n\n        return todo.completed;\n      case 'active':\n\n        return !todo.completed;\n\n      default:\n        return todo;\n    }\n  });\n\n  const serchTodos = filterTodos.filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()));\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                todos={todos}\n                filter={filter}\n                setCurentFilter={setFilter}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!loader\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={(query === '')\n                      ? filterTodos\n                      : serchTodos}\n                    todoId={todoId}\n                    setTodoId={(todo) => setTodoId(todo)}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todoId !== 0 && (\n        <TodoModal\n          todos={(query === '')\n            ? filterTodos\n            : serchTodos}\n          selectedUserId={todoId}\n          selectUser={(todo) => {\n            setTodoId(todo);\n          }}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}